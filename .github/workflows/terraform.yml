name: workspace-onboarding-api
on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  # No need to pass as inputs to each action
  TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  TF_DIRECTORY: ""
  ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

jobs:
  parse-ws-config:
    runs-on: "ubuntu-latest"
    steps:
      - name: checkout-repo
        uses: actions/checkout@v3
      - name: get-workspace-yaml
        id: get-workspace
        run: |
          cd config
          echo $(ls *.yaml | jq -R . | jq -s .)
          echo "workspaces=$(echo $(ls *.yaml | jq -R . | jq -s .))" >> $GITHUB_OUTPUT
      - name: echo-workspaces
        run: echo "${{ steps.get-workspace.outputs.workspaces }}"
      - name: validate-yaml-map
        uses: mikefarah/yq@master
        with:
          cmd: yq --exit-status 'tag == "!!map"' ./config/*.yaml -v; 

    outputs: 
        workspaces: ${{ steps.get-workspace.outputs.workspaces }}

  tfe-ws-pre-reqs:
    needs: parse-ws-config
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        workspaces: ${{fromJson(needs.parse-ws-config.outputs.workspaces)}}
    steps:
      - name: echo-filename
        run: echo ${{ matrix.workspaces }}
      - name: checkout-repo
        uses: actions/checkout@v3
      - name: log-${{ matrix.workspaces }}
        uses: mikefarah/yq@master
        with:
          cmd: yq ./config/${{ matrix.workspaces }}
      - name: Setup Python
        uses: actions/setup-python@v4.6.0
        with:
         python-version: '3.10'
         cache: 'pip'
      - name: install-python-dep
        run: pip install -r ./.github/workflows/requirements.txt
      - name: check-create-workspace
        run: python ./.github/workflows/test.py
        env:
          TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
          WORKSPACE_NAME: 'admin-ws-${{ matrix.workspaces }}'

  tfe-ws-upload-config:
    needs: [parse-ws-config, tfe-ws-pre-reqs]
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        workspaces: ${{fromJson(needs.parse-ws-config.outputs.workspaces)}}
    steps:
      - name: checkout-repo
        uses: actions/checkout@v3
      - name: Checkout tfc github-actions #only required whilst actions are private
        uses: actions/checkout@v3
        with:
          repository: hashicorp/tfc-workflows-github
          token: ${{ secrets.ACCESS_TOKEN }}
          persist-credentials: false
          path: ./.github/actions/tfc-workflows-github

      - name: Upload configuration version
        uses: ./.github/actions/tfc-workflows-github/actions/upload-configuration/
        id: upload
        with:
          workspace: 'admin-ws-${{ matrix.workspaces }}'
          directory: ${{ env.TF_DIRECTORY }}
    outputs: 
        ${{ matrix.workspaces }}_result: ${{ steps.upload.outputs.configuration_version_id }}

  tfe-ws-run-plan:
    needs: [parse-ws-config, tfe-ws-pre-reqs, tfe-ws-upload-config]
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        workspaces: ${{fromJson(needs.parse-ws-config.outputs.workspaces)}}
    steps:
      - run: echo ${{ needs.tfe-ws-upload-config.outputs}}.${{ matrix.workspaces }}_result }}

  tfe-ws-run-plan_temp:
    needs: [parse-ws-config, tfe-ws-pre-reqs, tfe-ws-upload-config]
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        workspaces: ${{fromJson(needs.parse-ws-config.outputs.workspaces)}}
    steps:
      - run: echo ${{ needs.tfe-ws-upload-config.outputs }}
      - name: checkout-repo
        uses: actions/checkout@v3
      - name: Checkout tfc github-actions #only required whilst actions are private
        uses: actions/checkout@v3
        with:
          repository: hashicorp/tfc-workflows-github
          token: ${{ secrets.ACCESS_TOKEN }}
          persist-credentials: false
          path: ./.github/actions/tfc-workflows-github
      - name: Run Terraform Plan
        uses: ./.github/actions/tfc-workflows-github/actions/create-run/
        continue-on-error: true
        id: run-plan
        with:
          workspace: admin-ws-${{ matrix.workspaces }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}

      - name: Log Error
        if: ${{ steps.run-plan.outputs.plan_status != 'finished' }} 
        run: |
          echo "An error occurred in the previous step."
          echo "The error message was: ${{ steps.run-plan.outcome }}"
          echo "run_status: ${{ steps.run-plan.outputs.run_status }}"
          echo "run_status: ${{ steps.run-plan.outputs.plan_status }}"
          
      - name: Discard Terraform Run
        if: ${{ steps.run-plan.outputs.plan_status != 'finished' }} 
        uses: ./.github/actions/tfc-workflows-github/actions/discard-run/
        id: discard-run
        with:
          run: ${{ steps.run-plan.outputs.run_id }}
          comment: "Run discarded due to error ${{ steps.run-plan.outputs.plan_status }}"

      - name: Catch Error   
        if: ${{ steps.run-plan.outputs.plan_status != 'finished' }} 
        run: | 
          exit 1
